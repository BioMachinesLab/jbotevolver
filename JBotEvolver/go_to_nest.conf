--output go_to_nest

--robots
 	classname=simulation.robot.DifferentialDriveRobot,
	x=1,
	y=1,
	sensors=(
		NestSensor_1=(
			classname=simulation.robot.sensors.NestSensor,
			range=1,
			numbersensors=2,
			eyes=1,
			id=1
		)
	),
	actuators=(
		TwoWheelActuator_1=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1
		)
	)

--controllers
 	classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		inputs=(
			NestNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			
		)
	)

--population classname=evolutionaryrobotics.populations.MuLambdaPopulation

--environment
 	classname=simulation.environment.RoundForageEnvironment,
	numberofpreys=0,
	steps=300

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.GenerationalEvolution

--evaluation
 	classname=evolutionaryrobotics.evaluationfunctions.StayAtDistanceToNestEvaluationFunction,
	distance=0

--random-seed 1

